<link rel="stylesheet" type="text/css" media="screen" href="<?php echo $this->baseUrl(); ?>/css/datatables.min.css" />
<script src="<?php echo $this->baseUrl(); ?>/js/datatables.min.js"></script>
<div class="col s12 right-align" hidden>
    <a  id="btnAgregarContacto" class="waves-effect  btn btnd" href="#" onclick="edicionContacto();">¡Agregar contacto!</a>
    <br><br>
</div>
<!-- Tabla con la bandeja de contactos -->
<div id="bandejaContactos">
   <table id="bandeja" class="display responsive-table" cellspacing="0" width="100%">
      <thead>
         <tr>
            <th class="center-align">Nombre(s)</th>
            <th class="center-align">Teléfono</th>
            <th class="center-align">Menú</th>
         </tr>
      </thead>
   </table>
</div>
<!-- Mensaje para mostrar cuando la bandeja esté vacía -->
<div class="center-align" id="mensajeSinContactos" hidden>
    <p>No hay contactos registrados</p>
    <a class="waves-effect  btn btnd" href="#" onclick="edicionContacto();">¡Agregar contacto!</a>
</div>
<br>
<!-- Modal Structure -->
<div id="modal" class="modal modal-fixed-footer">
    <div class="modal-content" id="modalContenido">
        <h4>Modal Header</h4>
        <p>A bunch of text</p>
    </div>
</div>
<script type="text/javascript">
    //Obtenemos los datos del modal
    var modal = $('#modal');
    var modalContenido = $('#modalContenido');
    //Obtenemos la bandeja de contactos
    var bandeja = $('#bandeja');

    /**
     * Función que muestra en un modal  los datos de un contacto
     *
     * @author René Daniel Galicia Vázquez <renedaniel191992@gmail.com>
     * @param {contactoId} id del contacto a buscar
     * @return void
     */
    function verContacto(contactoId = null){
        var url = "<?php echo $this->url(array('controller' => 'index', 'action' => 'get-contacto')) ?>";
        $.ajax({
            url: url,
            type: 'POST',
            data: { contactoId:contactoId },
            success: function(data, textStatus, request) {
                //Generamos una tabla para mostrar los datos en el modal
                var html = '<h3 class="titulo-seccion"> Contacto </h3>';
                html += '<table id="detalleContacto" class="display striped" cellspacing="0" width="100%"><tbody>';
                var diccionario = data['diccionario'];
                //Iteramos sobre los valores para hacerlo dinámico
                $.each(data.valores, function( index, value ) {
                    if (index != 'contacto_id') {
                        //Le damos formato al número de teléfono
                        if (index == 'contacto_telefono') {
                            value = value.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
                        }
                        if (value == null || value.length == 0) { value = '--';}
                        html += '<tr><td class="center-align" width="50%">'+diccionario[index]+':</td>';
                        html += '<td class="center-align" width="50%">'+value+'</td></tr>';
                    }
                });
                html += '</tbody></table>'
                //Generamos un botón para cerrar el modal
                var btnCerrar = '<div class="row"><div class="input-field col s12 center-align">';
                btnCerrar += '<a onclick="modal.modal(\'close\');" class="btn-large btnd">Cerrar</a></div>';
                btnCerrar += '</div>';
                html += btnCerrar;
                modalContenido.html(html);
                modal.modal('open');
            }
        });
    }

    /**
     * Función que muestra el mensaje de eliminar contacto
     *
     * @author René Daniel Galicia Vázquez <renedaniel191992@gmail.com>
     * @param {contactoId} id del contacto a eliminar
     * @param {contactoNombres} nombre del contacto a eliminar
     * @return void
     */
    function mostrarEliminarContacto(contactoId = null, contactoNombres = null){
        var html = '<h3 class="titulo-seccion"> Eliminar contacto </h3>';
        html += '<div class="center-align"><p>¿Está seguro de querer eliminar el contacto <b>'+contactoNombres+'</b>?</p></div>';
        //Generamos los botones de enviar y cancelar para el formulario
        var template = '<div class="row"><div class="input-field col s6 right-align">';
        template += '<a onclick="modal.modal(\'close\');" class="btn-large btnd btnc">Cancelar</a></div>';
        template += '<div class="input-field col s6 lef-align">';
        template += '<a class="btn-large btnd" onclick="eliminarContacto('+contactoId+');">&nbsp;&nbsp;Eliminar&nbsp;&nbsp;</button></div></div>';
        html += template;
        modalContenido.html(html);
        modal.modal('open');
    }

    /**
     * Función que elimina un contacto
     *
     * @author René Daniel Galicia Vázquez <renedaniel191992@gmail.com>
     * @param {contactoId} id del contacto a eliminar
     * @return void
     */
    function eliminarContacto(contactoId = null){
        var url = "<?php echo $this->url(array('controller' => 'index', 'action' => 'eliminar-contacto')) ?>";
        $.ajax({
            url: url,
            type: 'POST',
            data: { contactoId:contactoId },
            success: function(data, textStatus, request) {
                if (request.getResponseHeader('exito') == true) {
                    Materialize.toast('Contacto eliminado', 3000, 'mensaje-alerta');
                    bandeja.DataTable().ajax.reload();
                } else {
                    Materialize.toast('Ha ocurrido un error, inténtelo de nuevo', 3000, 'mensaje-alerta');
                }
                modal.modal('close');
            }
        });
    }

    /**
     * Función que genera el formulario para guardar/editar un contacto
     *
     * @author René Daniel Galicia Vázquez <renedaniel191992@gmail.com>
     * @return void
     */
    function edicionContacto(contactoId = null){
        var url = "<?php echo $this->url(array('controller' => 'index', 'action' => 'edicion-contacto')) ?>";
        $.ajax({
            url: url,
            type: 'POST',
            data: (contactoId != null)?{contactoId:contactoId}:{},
            success: function(data, textStatus, request) {
                modalContenido.html(data);
                modal.modal('open');
            }
        });
    }



    //Generamos la bandeja de contactos
    $(document).ready(function() {
    	//Variables globales
    	var html = '';
        var contenedorBandeja = $('#bandejaContactos');
        var btnAgregarContacto = $('#btnAgregarContacto');
        var mensajeSinContactos = $('#mensajeSinContactos');

    	//Generamos los iconos de las columnas de acciones
    	var iconoVer = '<i class="material-icons green-text">assignment_ind</i>';
        var iconoEditar = '<i class="material-icons blue-text">mode_edit</i>';
    	var iconoEliminar = '<i class="material-icons red-text text-accent-4">delete</i>';

    	//Generamos la bandeja de contactos
        bandeja.DataTable( {
            'ajax': "<?php echo $this->url(array('controller' => 'index', 'action' => 'get-contactos')) ?>",
            'columns': [
                { "data": 'contacto_nombres' },
                { "data": 'contacto_telefono' },
                { "data": null },
            ],
    		"columnDefs": [
    			{ "orderable": false, "targets": [2] },
    			{ "searchable": false, "targets": [2] }
    		],
    		"bLengthChange": false,
    		"order": [[ 0, "asc" ]],
            "pageLength": 10,
            "oLanguage":{
                "sProcessing":     "Procesando...",
                "sZeroRecords":    "No se encontraron contactos con ese nombre",
                "sInfo":           "Mostrando contactos _START_ al _END_. &nbsp;&nbsp;&nbsp;&nbsp;Total de contactos: _TOTAL_",
                "sInfoEmpty":      "Mostrando contactos 0 al 0 de un total de 0 contactos",
                "sInfoFiltered":   "(filtrado de un total de _MAX_ contactos)",
                "sInfoPostFix":    "",
                "sSearch":         "Buscar:",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst":    "ir al inicio",
                    "sLast":     "ir al final",
                    "sNext":     "siguiente »",
                    "sPrevious": "« anterior"
                },
                "oAria": {
                    "sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
    		"createdRow": function( row, data, dataIndex ) {
    		    //Generamos la columna de menú
    		    var tagIconoVer = '<a class="modal-trigger tooltipped ver-contacto" data-position="left" data-tooltip="Ver información" href="#modal" onclick="verContacto('+data.contacto_id+');">'+iconoVer+'</a>';
                var tagIconoEditar = '<a class="modal-trigger tooltipped ver-contacto" data-position="left" data-tooltip="Editar contacto" href="#modal" onclick="edicionContacto('+data.contacto_id+');">'+iconoEditar+'</a>';
                var tagIconoEliminar = '<a class="modal-trigger tooltipped ver-contacto" data-position="left" data-tooltip="Eliminar contacto" href="#modal" onclick="mostrarEliminarContacto('+data.contacto_id+', \''+data.contacto_nombres+'\');">'+iconoEliminar+'</a>';
                html = tagIconoVer+tagIconoEditar+tagIconoEliminar;
    		    $('td:eq(2)', row).html(html).addClass('center-align');
                //Damos formato al número de teléfono
                html = data.contacto_telefono.replace(/(\d{3})(\d{3})(\d{4})/, '$1-$2-$3');
                $('td:eq(1)', row).html(html).addClass('center-align');
                //Centramos las columnas restantes
                $('td:eq(0)', row).addClass('center-align');
    		},
    	    "initComplete": function (settings, data) {
    	    	//Mostramos un mensaje distinto si no hay contactos registrados
    	    	if (data.data.length == 0) {
                    btnAgregarContacto.parent().hide();
                    bandeja.parent().hide();
                    mensajeSinContactos.show();
    	    	} else {
                    btnAgregarContacto.parent().show('fast');
                }
                contenedorBandeja.show();
    	    },
            "drawCallback": function(settings) {
                //Revisamos si el usuario ha eliminado todos los contactos para mostrar el mensaje sin registros
                if(settings.aoData.length > 0) {
                    mensajeSinContactos.hide();
                    bandeja.parent().show();
                    btnAgregarContacto.parent().show();
                } else {
                    mensajeSinContactos.show();
                    bandeja.parent().hide();
                    btnAgregarContacto.parent().hide();
                }
                //Desactivamos la paginación si sólo hay una página de datos
                var pagination = $(this).closest('.dataTables_wrapper').find('.dataTables_paginate');
                pagination.toggle(this.api().page.info().pages > 1);
            }
        } );

        //Si el usuario intenta buscar el teléfono con guiones lo normalizamos
        var input = $(".dataTables_filter input");
        input.unbind('keyup search input').bind('keyup', function (e) {
            var keywords = input.val();
            var filter = keywords.replace(/-/g, '');
            bandeja.dataTable().fnFilter(filter, null, true, false, false, true);
        });

    	//Activamos los tooltip
    	bandeja.on('draw.dt', function () {
    	    $('.tooltipped').tooltip({delay: 50});
    	} );

        //Activamos los modales
        modal.modal();
        modal.on('closeModal', function () {
            modalContenido.html('');
            $('.tooltipped').tooltip({delay: 50});
        } );
        modal.on('openModal', function () {
            $('.tooltipped').tooltip('remove');
        } );
    });
</script>